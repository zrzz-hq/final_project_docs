{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. test_function_doc.md # Documentation for the test function","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. test_function_doc.md # Documentation for the test function","title":"Project layout"},{"location":"test_function_doc/","text":"test Function Documentation Overview The test function evaluates a pre-trained Faster R-CNN model on a given test dataset and calculates performance metrics, including Mean Average Precision (mAP) and Intersection over Union (IoU) . It also optionally saves visualized results with bounding boxes drawn on the test images. Arguments Parameter Type Default Description image_dir str ./data/test_set/images Path to the directory containing test images. label_dir str ./data/test_set/labels Path to the directory containing test labels in YOLO format. result_dir str None Directory to save test results with bounding boxes. If None , results are not saved. weights str Pretrained Specifies the model weights to use. See the options and their meanings below. backbone str resnet34_fpn Backbone architecture. Options: resnet34_fpn , resnet50_fpn , etc. device torch.device cuda (if available) or cpu Device to run evaluation (CPU or GPU). batch_size int 32 Number of samples processed per batch. conf_threshold float 0.8 Confidence threshold for filtering predictions. Weights Options for weights Parameter The weights parameter specifies how the model is initialized. Below are the available options: Option Description Pretrained Uses pre-trained weights from a file or a pre-defined source. This is useful when starting with a trained model. Default Initializes the model with default weights provided by the chosen backbone in PyTorch's library. None Starts with randomly initialized weights. This is useful for training from scratch. Custom Path You can specify the path to a specific .pt file containing saved weights. For example: - weights='Pretrained' loads a pre-trained model from a standard checkpoint. - weights='None' skips pre-training and starts the model with untrained parameters. Returns Return Value Type Description mAP dict Mean Average Precision for the test dataset. IoU dict Intersection over Union metric for the dataset. How It Works Loads the test images and labels using a custom dataset class ( YoloDataset ). Initializes a Faster R-CNN model with the specified backbone and weights. Runs the model on the test dataset in batches, filtering predictions based on confidence. Updates metrics ( mAP , IoU ) for each batch. Optionally, saves the test results with bounding boxes drawn on the images to the specified directory. Example Usage mAP, iou = test( image_dir='./data/test_set/images', label_dir='./data/test_set/labels', result_dir='./results', weights='Pretrained', backbone='resnet34_fpn', batch_size=16, conf_threshold=0.8 ) print(\"Mean Average Precision:\", mAP) print(\"Intersection over Union:\", iou)","title":"test Function Documentation"},{"location":"test_function_doc/#test-function-documentation","text":"","title":"test Function Documentation"},{"location":"test_function_doc/#overview","text":"The test function evaluates a pre-trained Faster R-CNN model on a given test dataset and calculates performance metrics, including Mean Average Precision (mAP) and Intersection over Union (IoU) . It also optionally saves visualized results with bounding boxes drawn on the test images.","title":"Overview"},{"location":"test_function_doc/#arguments","text":"Parameter Type Default Description image_dir str ./data/test_set/images Path to the directory containing test images. label_dir str ./data/test_set/labels Path to the directory containing test labels in YOLO format. result_dir str None Directory to save test results with bounding boxes. If None , results are not saved. weights str Pretrained Specifies the model weights to use. See the options and their meanings below. backbone str resnet34_fpn Backbone architecture. Options: resnet34_fpn , resnet50_fpn , etc. device torch.device cuda (if available) or cpu Device to run evaluation (CPU or GPU). batch_size int 32 Number of samples processed per batch. conf_threshold float 0.8 Confidence threshold for filtering predictions.","title":"Arguments"},{"location":"test_function_doc/#weights-options-for-weights-parameter","text":"The weights parameter specifies how the model is initialized. Below are the available options: Option Description Pretrained Uses pre-trained weights from a file or a pre-defined source. This is useful when starting with a trained model. Default Initializes the model with default weights provided by the chosen backbone in PyTorch's library. None Starts with randomly initialized weights. This is useful for training from scratch. Custom Path You can specify the path to a specific .pt file containing saved weights. For example: - weights='Pretrained' loads a pre-trained model from a standard checkpoint. - weights='None' skips pre-training and starts the model with untrained parameters.","title":"Weights Options for weights Parameter"},{"location":"test_function_doc/#returns","text":"Return Value Type Description mAP dict Mean Average Precision for the test dataset. IoU dict Intersection over Union metric for the dataset.","title":"Returns"},{"location":"test_function_doc/#how-it-works","text":"Loads the test images and labels using a custom dataset class ( YoloDataset ). Initializes a Faster R-CNN model with the specified backbone and weights. Runs the model on the test dataset in batches, filtering predictions based on confidence. Updates metrics ( mAP , IoU ) for each batch. Optionally, saves the test results with bounding boxes drawn on the images to the specified directory.","title":"How It Works"},{"location":"test_function_doc/#example-usage","text":"mAP, iou = test( image_dir='./data/test_set/images', label_dir='./data/test_set/labels', result_dir='./results', weights='Pretrained', backbone='resnet34_fpn', batch_size=16, conf_threshold=0.8 ) print(\"Mean Average Precision:\", mAP) print(\"Intersection over Union:\", iou)","title":"Example Usage"}]}